{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport React, { useState, useEffect } from \"react\";\nimport ListContainer from \"./components/ListContainer\";\nimport styles from \"./Appstyles\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as Network from 'expo-network';\nimport Archive from \"./Archive\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isEnabled = _useState4[0],\n    setIsEnabled = _useState4[1];\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n  Network.getNetworkStateAsync().then(function (data) {\n    console.log({\n      data: data\n    });\n  });\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: [styles.largeHeading, styles.headingColor],\n      children: \"Welcome to Movie Lister!\"\n    }), _jsx(Text, {\n      children: \"Looking for a good movie to watch tonight? Check out our Movie Archive for an incredible list!\"\n    }), _jsx(Button, {\n      title: \"Go to our Movie Archive\",\n      onPress: function onPress() {\n        return navigation.navigate('Archive');\n      }\n    }), Platform.OS === 'ios' ? _jsx(Text, {\n      children: \"On Mobile\"\n    }) : _jsx(Text, {\n      children: \"Desktop\"\n    }), _jsx(ListContainer, {}), _jsx(Switch, {\n      trackColor: {\n        false: \"#767577\",\n        true: \"#81b0ff\"\n      },\n      thumbColor: isEnabled ? \"#f5dd4b\" : \"#f4f3f4\",\n      ios_backgroundColor: \"#3e3e3e\",\n      onValueChange: toggleSwitch,\n      value: isEnabled\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: 'Movie Lister'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Archive\",\n        component: Archive\n      })]\n    })\n  });\n}","map":{"version":3,"names":["StatusBar","React","useState","useEffect","ListContainer","styles","NavigationContainer","createNativeStackNavigator","Network","Archive","HomeScreen","navigation","data","setData","isEnabled","setIsEnabled","toggleSwitch","previousState","getNetworkStateAsync","then","console","log","container","largeHeading","headingColor","navigate","Platform","OS","false","true","Stack","App","title"],"sources":["C:/Users/User/OneDrive/Desktop/dev/ReactNativeDemo/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { Text, Switch, SafeAreaView, Button, Platform, FlatList } from 'react-native';\nimport React, { useState, useEffect } from \"react\"\nimport ListContainer from './components/ListContainer';\nimport styles from './Appstyles'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as Network from 'expo-network'; \n\nimport Archive from './Archive';\n\nfunction HomeScreen({navigation}) {\n  const [data, setData] =useState([]);\n  const [ isEnabled, setIsEnabled ] = useState(false);\n  const toggleSwitch = () => setIsEnabled(previousState => !previousState);\n\n  Network.getNetworkStateAsync().then(data => {\n    console.log({data});\n  });\n\n \n  \n  return (\n    <SafeAreaView style={styles.container}>\n      <Text style={[styles.largeHeading, styles.headingColor]}>Welcome to Movie Lister!</Text>\n      <Text>Looking for a good movie to watch tonight? Check out our Movie Archive for an incredible list!</Text>\n     \n      <Button title='Go to our Movie Archive' onPress={() => navigation.navigate('Archive')} />\n      {\n        Platform.OS === 'ios'\n        ? <Text>On Mobile</Text>\n        : <Text>Desktop</Text>\n      }\n    \n      <ListContainer />\n      <Switch \n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n        thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\" }\n        ios_backgroundColor=\"#3e3e3e\"\n        onValueChange={toggleSwitch}\n        value={isEnabled}\n      />\n      <StatusBar style=\"auto\" />\n    </SafeAreaView>\n  );\n\n}\nconst Stack = createNativeStackNavigator();\nexport default function App() {\n  \n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Home\" component={HomeScreen} options={{ title:'Movie Lister'}} />\n        <Stack.Screen name=\"Archive\" component={Archive} />\n      </Stack.Navigator>\n\n    </NavigationContainer>\n  );\n}\n\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAE5C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa;AACpB,OAAOC,MAAM;AACb,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAO,KAAKC,OAAO,MAAM,cAAc;AAEvC,OAAOC,OAAO;AAAkB;AAAA;AAEhC,SAASC,UAAU,OAAe;EAAA,IAAbC,UAAU,QAAVA,UAAU;EAC7B,gBAAuBT,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA5BU,IAAI;IAAEC,OAAO;EACpB,iBAAoCX,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA3CY,SAAS;IAAEC,YAAY;EAC/B,IAAMC,YAAY,GAAG,SAAfA,YAAY;IAAA,OAASD,YAAY,CAAC,UAAAE,aAAa;MAAA,OAAI,CAACA,aAAa;IAAA,EAAC;EAAA;EAExET,OAAO,CAACU,oBAAoB,EAAE,CAACC,IAAI,CAAC,UAAAP,IAAI,EAAI;IAC1CQ,OAAO,CAACC,GAAG,CAAC;MAACT,IAAI,EAAJA;IAAI,CAAC,CAAC;EACrB,CAAC,CAAC;EAIF,OACE,MAAC,YAAY;IAAC,KAAK,EAAEP,MAAM,CAACiB,SAAU;IAAA,WACpC,KAAC,IAAI;MAAC,KAAK,EAAE,CAACjB,MAAM,CAACkB,YAAY,EAAElB,MAAM,CAACmB,YAAY,CAAE;MAAA,UAAC;IAAwB,EAAO,EACxF,KAAC,IAAI;MAAA,UAAC;IAA8F,EAAO,EAE3G,KAAC,MAAM;MAAC,KAAK,EAAC,yBAAyB;MAAC,OAAO,EAAE;QAAA,OAAMb,UAAU,CAACc,QAAQ,CAAC,SAAS,CAAC;MAAA;IAAC,EAAG,EAEvFC,QAAQ,CAACC,EAAE,KAAK,KAAK,GACnB,KAAC,IAAI;MAAA,UAAC;IAAS,EAAO,GACtB,KAAC,IAAI;MAAA,UAAC;IAAO,EAAO,EAGxB,KAAC,aAAa,KAAG,EACjB,KAAC,MAAM;MACL,UAAU,EAAE;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAU,CAAE;MAClD,UAAU,EAAEf,SAAS,GAAG,SAAS,GAAG,SAAW;MAC/C,mBAAmB,EAAC,SAAS;MAC7B,aAAa,EAAEE,YAAa;MAC5B,KAAK,EAAEF;IAAU,EACjB,EACF,KAAC,SAAS;MAAC,KAAK,EAAC;IAAM,EAAG;EAAA,EACb;AAGnB;AACA,IAAMgB,KAAK,GAAGvB,0BAA0B,EAAE;AAC1C,eAAe,SAASwB,GAAG,GAAG;EAE5B,OACE,KAAC,mBAAmB;IAAA,UAClB,MAAC,KAAK,CAAC,SAAS;MAAA,WACd,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,SAAS,EAAErB,UAAW;QAAC,OAAO,EAAE;UAAEsB,KAAK,EAAC;QAAc;MAAE,EAAG,EACrF,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,SAAS;QAAC,SAAS,EAAEvB;MAAQ,EAAG;IAAA;EACnC,EAEE;AAE1B"},"metadata":{},"sourceType":"module"}