{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport React, { useState, useEffect } from \"react\";\nimport ListContainer from \"./components/ListContainer\";\nimport styles from \"./Appstyles\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as Network from 'expo-network';\nimport Archive from \"./Archive\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    data = _useState4[0],\n    setData = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isEnabled = _useState6[0],\n    setIsEnabled = _useState6[1];\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n  Network.getNetworkStateAsync().then(function (data) {\n    console.log({\n      data: data\n    });\n  });\n  useEffect(function () {\n    getMovies();\n  }, []);\n  var getMovies = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(\"https://codycrudapi.herokuapp.com/api/v1/movies\");\n        var json = yield response.json();\n        setData(json);\n        console.log(json);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function getMovies() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: [styles.largeHeading, styles.headingColor],\n      children: \"Welcome to Movie Lister!\"\n    }), _jsx(Text, {\n      children: \"Looking for a good movie to watch tonight? Check out our Movie Archive for an incredible list!\"\n    }), _jsx(FlatList, {\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      style: styles.listContainer,\n      data: data,\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(_Fragment, {\n          children: _jsx(Text, {\n            children: item.title\n          })\n        });\n      }\n    }), _jsx(Button, {\n      title: \"Go to our Movie Archive\",\n      onPress: function onPress() {\n        return navigation.navigate('Archive');\n      }\n    }), Platform.OS === 'ios' ? _jsx(Text, {\n      children: \"On Mobile\"\n    }) : _jsx(Text, {\n      children: \"Desktop\"\n    }), _jsx(ListContainer, {}), _jsx(Switch, {\n      trackColor: {\n        false: \"#767577\",\n        true: \"#81b0ff\"\n      },\n      thumbColor: isEnabled ? \"#f5dd4b\" : \"#f4f3f4\",\n      ios_backgroundColor: \"#3e3e3e\",\n      onValueChange: toggleSwitch,\n      value: isEnabled\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: 'Movie Lister'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Archive\",\n        component: Archive\n      })]\n    })\n  });\n}","map":{"version":3,"names":["StatusBar","React","useState","useEffect","ListContainer","styles","NavigationContainer","createNativeStackNavigator","Network","Archive","HomeScreen","navigation","isLoading","setLoading","data","setData","isEnabled","setIsEnabled","toggleSwitch","previousState","getNetworkStateAsync","then","console","log","getMovies","response","fetch","json","error","container","largeHeading","headingColor","item","id","listContainer","title","navigate","Platform","OS","false","true","Stack","App"],"sources":["C:/Users/User/OneDrive/Desktop/dev/ReactNativeDemo/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { Text, Switch, SafeAreaView, Button, Platform, FlatList } from 'react-native';\nimport React, { useState, useEffect } from \"react\"\nimport ListContainer from './components/ListContainer';\nimport styles from './Appstyles'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as Network from 'expo-network'; \n\nimport Archive from './Archive';\n\nfunction HomeScreen({navigation}) {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] =useState([]);\n  const [ isEnabled, setIsEnabled ] = useState(false);\n  const toggleSwitch = () => setIsEnabled(previousState => !previousState);\n\n  Network.getNetworkStateAsync().then(data => {\n    console.log({data});\n  });\n\n  useEffect(() => {\n    getMovies();\n  \n  }, []);\n\n  const getMovies = async () => {\n    try {\n      const response = await fetch(`https://codycrudapi.herokuapp.com/api/v1/movies`);\n      const json = await response.json();\n      setData(json)\n      console.log(json)\n    }\n    catch(error){\n      console.error(error)\n    }\n    finally {\n      setLoading(false)\n    }\n  };\n  \n  return (\n    <SafeAreaView style={styles.container}>\n      <Text style={[styles.largeHeading, styles.headingColor]}>Welcome to Movie Lister!</Text>\n      <Text>Looking for a good movie to watch tonight? Check out our Movie Archive for an incredible list!</Text>\n      <FlatList\n        keyExtractor={(item) => item.id}\n        style={styles.listContainer}\n        data={data}\n        renderItem={({item}) => (\n          <>\n            <Text>{item.title}</Text>\n          </>\n        )}\n    />\n      <Button title='Go to our Movie Archive' onPress={() => navigation.navigate('Archive')} />\n      {\n        Platform.OS === 'ios'\n        ? <Text>On Mobile</Text>\n        : <Text>Desktop</Text>\n      }\n    \n      <ListContainer />\n      <Switch \n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n        thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\" }\n        ios_backgroundColor=\"#3e3e3e\"\n        onValueChange={toggleSwitch}\n        value={isEnabled}\n      />\n      <StatusBar style=\"auto\" />\n    </SafeAreaView>\n  );\n\n}\nconst Stack = createNativeStackNavigator();\nexport default function App() {\n  \n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Home\" component={HomeScreen} options={{ title:'Movie Lister'}} />\n        <Stack.Screen name=\"Archive\" component={Archive} />\n      </Stack.Navigator>\n\n    </NavigationContainer>\n  );\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}